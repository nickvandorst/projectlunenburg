<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'form.registry' shared service.

include_once $this->targetDirs[3].'\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\FormExtensionInterface.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\Extension\\DependencyInjection\\DependencyInjectionExtension.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\FormRegistryInterface.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\symfony\\src\\Symfony\\Component\\Form\\FormRegistry.php';

return $this->services['form.registry'] = new \Symfony\Component\Form\FormRegistry(array(0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\ServiceLocator(array('AppBundle\\Form\\ArtikelInkoperType' => function () {
    return ${($_ = isset($this->services['AppBundle\Form\ArtikelInkoperType']) ? $this->services['AppBundle\Form\ArtikelInkoperType'] : $this->services['AppBundle\Form\ArtikelInkoperType'] = new \AppBundle\Form\ArtikelInkoperType()) && false ?: '_'};
}, 'AppBundle\\Form\\ArtikelMagazijnmeesterType' => function () {
    return ${($_ = isset($this->services['AppBundle\Form\ArtikelMagazijnmeesterType']) ? $this->services['AppBundle\Form\ArtikelMagazijnmeesterType'] : $this->services['AppBundle\Form\ArtikelMagazijnmeesterType'] = new \AppBundle\Form\ArtikelMagazijnmeesterType()) && false ?: '_'};
}, 'AppBundle\\Form\\ArtikelType' => function () {
    return ${($_ = isset($this->services['AppBundle\Form\ArtikelType']) ? $this->services['AppBundle\Form\ArtikelType'] : $this->services['AppBundle\Form\ArtikelType'] = new \AppBundle\Form\ArtikelType()) && false ?: '_'};
}, 'AppBundle\\Form\\ArtikelinformatieType' => function () {
    return ${($_ = isset($this->services['AppBundle\Form\ArtikelinformatieType']) ? $this->services['AppBundle\Form\ArtikelinformatieType'] : $this->services['AppBundle\Form\ArtikelinformatieType'] = new \AppBundle\Form\ArtikelinformatieType()) && false ?: '_'};
}, 'AppBundle\\Form\\BestelorderType' => function () {
    return ${($_ = isset($this->services['AppBundle\Form\BestelorderType']) ? $this->services['AppBundle\Form\BestelorderType'] : $this->services['AppBundle\Form\BestelorderType'] = new \AppBundle\Form\BestelorderType()) && false ?: '_'};
}, 'AppBundle\\Form\\KlantType' => function () {
    return ${($_ = isset($this->services['AppBundle\Form\KlantType']) ? $this->services['AppBundle\Form\KlantType'] : $this->services['AppBundle\Form\KlantType'] = new \AppBundle\Form\KlantType()) && false ?: '_'};
}, 'AppBundle\\Form\\LeverancierToevoegenType' => function () {
    return ${($_ = isset($this->services['AppBundle\Form\LeverancierToevoegenType']) ? $this->services['AppBundle\Form\LeverancierToevoegenType'] : $this->services['AppBundle\Form\LeverancierToevoegenType'] = new \AppBundle\Form\LeverancierToevoegenType()) && false ?: '_'};
}, 'AppBundle\\Form\\OntvangstregelType' => function () {
    return ${($_ = isset($this->services['AppBundle\Form\OntvangstregelType']) ? $this->services['AppBundle\Form\OntvangstregelType'] : $this->services['AppBundle\Form\OntvangstregelType'] = new \AppBundle\Form\OntvangstregelType()) && false ?: '_'};
}, 'AppBundle\\Form\\UserRegistrationForm' => function () {
    return ${($_ = isset($this->services['AppBundle\Form\UserRegistrationForm']) ? $this->services['AppBundle\Form\UserRegistrationForm'] : $this->services['AppBundle\Form\UserRegistrationForm'] = new \AppBundle\Form\UserRegistrationForm()) && false ?: '_'};
}, 'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => function () {
    return ${($_ = isset($this->services['form.type.entity']) ? $this->services['form.type.entity'] : $this->load('getForm_Type_EntityService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => function () {
    return ${($_ = isset($this->services['form.type.choice']) ? $this->services['form.type.choice'] : $this->load('getForm_Type_ChoiceService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => function () {
    return ${($_ = isset($this->services['form.type.form']) ? $this->services['form.type.form'] : $this->load('getForm_Type_FormService.php')) && false ?: '_'};
})), array('Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_extension.form.http_foundation']) ? $this->services['form.type_extension.form.http_foundation'] : $this->load('getForm_TypeExtension_Form_HttpFoundationService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['form.type_extension.form.validator']) ? $this->services['form.type_extension.form.validator'] : $this->load('getForm_TypeExtension_Form_ValidatorService.php')) && false ?: '_'};
    yield 2 => ${($_ = isset($this->services['form.type_extension.upload.validator']) ? $this->services['form.type_extension.upload.validator'] : $this->load('getForm_TypeExtension_Upload_ValidatorService.php')) && false ?: '_'};
    yield 3 => ${($_ = isset($this->services['form.type_extension.csrf']) ? $this->services['form.type_extension.csrf'] : $this->load('getForm_TypeExtension_CsrfService.php')) && false ?: '_'};
    yield 4 => ${($_ = isset($this->services['form.type_extension.form.data_collector']) ? $this->services['form.type_extension.form.data_collector'] : $this->load('getForm_TypeExtension_Form_DataCollectorService.php')) && false ?: '_'};
}, 5), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_extension.repeated.validator']) ? $this->services['form.type_extension.repeated.validator'] : $this->services['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension()) && false ?: '_'};
}, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_extension.submit.validator']) ? $this->services['form.type_extension.submit.validator'] : $this->services['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension()) && false ?: '_'};
}, 1)), new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_guesser.validator']) ? $this->services['form.type_guesser.validator'] : $this->load('getForm_TypeGuesser_ValidatorService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['form.type_guesser.doctrine']) ? $this->services['form.type_guesser.doctrine'] : $this->load('getForm_TypeGuesser_DoctrineService.php')) && false ?: '_'};
}, 2), NULL)), ${($_ = isset($this->services['form.resolved_type_factory']) ? $this->services['form.resolved_type_factory'] : $this->load('getForm_ResolvedTypeFactoryService.php')) && false ?: '_'});
